#include <iostream>
#include <cmath>
#include <iomanip>
#include <windows.h>
using namespace std;
int main()
{//первый этап
    SetConsoleCP(1251);                // задаем кодировку для вывода на экран
    SetConsoleOutputCP(1251);          // задаем кодировку для ввода данных
    double a, b, h, x, otre1, otre2,c, fa, fc;   //создаём переменные типа double потому что расчитываем на плавающую точку

    cout << "Введите диапозон от = ";  //стандартный ввод данных: выводим русский запрос на консоль принимаем значение
    cin >> a;                          // стандартный ввод данных: принимаем значение
    cout << "Введите диапозон до = ";
    cin >> b;
    cout << "Введите шаг = ";
    cin >> h;
    cout << endl;
    cout << "x" << "\t" << "y" <<endl; //выводим x и y с горизонталной табуляцией (/t), чтобы создать столбцы таблицы (8 символов между x и y)
    
    int t = 0; //создаём счётчик шагов, за которые найдём корень
    for(x=a; x<=b; x+=h)    //поставляем значения x в диапозоне от a до b с шагом h
    {
        double f1= (pow((x - 1),0.5) - 2.2) / (x-1); //подставляем в функцию получившиеся значения x-1, чтобы обнаружить смену знака
        double f2= (pow (x, 0.5) - 2.2) / x;  // подставляем функцию получившиеся значения x
        if((((f1 > 0) && (f2 < 0)) || ((f1 < 0) && (f2 > 0)) ) && (t == 0)) //если знак поменялся, то 
        {
            otre1 = x; //начало отрезка, в котором лежит ответ
            otre2 = x+h; //конец отрезка, в котором лежит ответ
            t +=1; //счётчик: сколько раз сменился знак (считаем шаги до нахождения корня)
        }

        cout << x << "\t"<< f2 << endl; //выводим в таблицу значение х и y (f2). Интервал между x и y 8 знаков (/t)
    }
    cout<<endl;
    cout << "Промежуток в котором находится корень = [" << otre1 <<"; "<<otre2<<"]"<<endl; //выводим отрезок на экран
    cout<<endl;     //Начинаем 2 этап
    cout << setw(5) << "a" << setw(15) << "b" << setw(15) << "c" << setw(15) << "b-a" << setw(15) << "f(a)" << setw(15) << "f(c)" << setw(15) << "f(a)*f(c)" << endl; //выводим таблицу из столбцов a, b, c, b-a, f(a), f(c), f(a)*f(c) 
    t = 0;//обнуляем счётчик
    while (otre2-otre1 > 0.0001) //пока открезок не будет <= необходимой точности (0.0001) выполняем цикл
    {
        c = (otre1+otre2)/2; //находим середину отрезка c=(a+b)/2
        fa = pow(otre1, 0.5) -2.2 / otre1; // считаем значение y для x = a
        fc = pow(c, 0.5) - 2.2 / c; // считаем значение y для x = c
        cout << setw(5) << otre1 << setw(15) << otre2 << setw(15) << c << setw(15) << otre2-otre1 << setw(15) << fa << setw(15) << fc << setw(15) << fa*fc << endl; //выводим полученные результаты таблицей
        if (fa*fc < 0) //выбираем новый отрезок [a,b] в соответствии с условием
        {
            otre2 = c; // a(otre1) остаётся прежним, b(otre2) = полученному с
        } else if (fa*fc > 0){
            otre1 = c; // a(otre1) = полученному с, b(otre2) остаётся прежним
        }
        t +=1; //считаем число прохождения цикла (во сколько шагов получен результат)
    }
    cout <<"Корень уравнения = " << c << endl; //выводим искомое значение корня (по условию оно расчитано в переменной с)
    cout <<"Шаг = "<< t <<endl; //выводим число шагов, затраченных на нахождение результата 

    return 0;
}